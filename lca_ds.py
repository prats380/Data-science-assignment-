# -*- coding: utf-8 -*-
"""LCA_ds.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qTFU2SWaS3UJ_HL5jTNovfbNBduAtrav
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_selection import RFE
from sklearn.model_selection import cross_val_score
from sklearn.metrics import classification_report


df=pd.read_csv('menu.xlsx')

df.fillna(df.mean(), inplace=True)


def remove_outliers(df):
    Q1 = df.quantile(0.25)
    Q3 = df.quantile(0.75)
    IQR = Q3 - Q1
    df = df[~((df < (Q1 - 1.5 * IQR)) | (df > (Q3 + 1.5 * IQR))).any(axis=1)]
    return df

df = remove_outliers(df)


X = df.drop('target', axis=1)
y = df['target']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

model = DecisionTreeClassifier()

selector = RFE(model, n_features_to_select=5)
X_selected = selector.fit_transform(X_scaled, y)

X_train, X_test, y_train, y_test = train_test_split(X_selected, y, test_size=0.2, random_state=42)


rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)
rf_classifier.fit(X_train, y_train)
rf_predictions = rf_classifier.predict(X_test)

dt_classifier = DecisionTreeClassifier(random_state=42)
dt_classifier.fit(X_train, y_train)
dt_predictions = dt_classifier.predict(X_test)


print("Random Forest Classification Report:")
print(classification_report(y_test, rf_predictions))

print("Decision Tree Classification Report:")
print(classification_report(y_test, dt_predictions))


rf_cv_scores = cross_val_score(rf_classifier, X_selected, y, cv=5)
dt_cv_scores = cross_val_score(dt_classifier, X_selected, y, cv=5)

print(f'Random Forest Cross-Validation Scores: {rf_cv_scores}')
print(f'Decision Tree Cross-Validation Scores: {dt_cv_scores}')

